presubmits:
  # PROMENITI PRI KOPIRANJU
  # Name treba da bude u formatu "pull-<tim>-<naziv-servisa>-test", npr.
  # pull-banka-1-user-service-test
  - name: pull-vezbe-backend-user-service-test
    #always_run: true
    run_if_changed: "(user-service/|docker-compose.yml|pom.xml|.prow/)"
    decorate: true
    spec:
      containers:
        - image: harbor.k8s.elab.rs/base-images/base:java-21-node-18-docker
          command:
            - /bin/bash
            - -c
            - |
              set -euo pipefail

              collectJUnitCoverage() {
                junit_source_directory="./target/surefire-reports/"
                junit_dest_directory="/logs/artifacts/"

                counter=1

                for file in "$junit_source_directory"/*.xml; do
                  cp "$file" "$junit_dest_directory/junit.$counter.xml"
                  ((counter++))
                done
                
                cp -r ./target/site/jacoco /logs/artifacts/
                echo "${GCSWEB_URL}/prow-logs/pr-logs/pull/${REPO_OWNER}_${REPO_NAME}/${PULL_NUMBER}/${JOB_NAME}/${BUILD_NUMBER}/artifacts/jacoco/index.html" > /logs/artifacts/coverage.link.txt
              }

              start-docker.sh

              # PROMENITI PRI KOPIRANJU
              SERVICE_NAME="user-service"

              # PROMENITI PRI KOPIRANJU
              # Ovde treba do pokrenete sve mikroservise i dependencies koji vam trebaju
              # za integracione i end to end testove.
              # Primeri komandi (odkomentirasti neku komandu ili dodati neku svoju):
              # docker compose up -d mysql-user
              # docker compose --profile user-service up -d
              docker compose up -d mysql-user
              
              cd "$SERVICE_NAME"

              sleep 120

              trap collectJUnitCoverage EXIT
              mvn clean verify test
          securityContext:
            privileged: true
          imagePullPolicy: Always
